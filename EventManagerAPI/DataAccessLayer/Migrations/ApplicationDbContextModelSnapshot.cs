// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entities.Organizer", b =>
                {
                    b.Property<int>("OrganizerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizerID");

                    b.ToTable("Organizers");

                    b.HasData(
                        new
                        {
                            OrganizerID = 1,
                            Email = "amal@example.com",
                            Name = "Amal",
                            Password = "amal123",
                            PhoneNumber = "045-6987234",
                            Role = "Organizer"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Attendee", b =>
                {
                    b.Property<int>("AttendeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendeeID");

                    b.ToTable("Attendees");

                    b.HasData(
                        new
                        {
                            AttendeeID = 1,
                            Email = "gihan@example.com",
                            Name = "Gihan",
                            Password = "gihan123",
                            PhoneNumber = "074-7854120",
                            Role = "Attendee"
                        },
                        new
                        {
                            AttendeeID = 2,
                            Email = "kasun@example.com",
                            Name = "Kasun",
                            Password = "kasun123",
                            PhoneNumber = "078-7874140",
                            Role = "Attendee"
                        },
                        new
                        {
                            AttendeeID = 3,
                            Email = "pahan@example.com",
                            Name = "Pahan",
                            Password = "pahan123",
                            PhoneNumber = "075-6524781",
                            Role = "Attendee"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.BudgetTracking", b =>
                {
                    b.Property<int>("BudgetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetID"));

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int>("Expenses")
                        .HasColumnType("int");

                    b.Property<int>("Revenue")
                        .HasColumnType("int");

                    b.HasKey("BudgetID");

                    b.HasIndex("EventID")
                        .IsUnique();

                    b.ToTable("BudgetTrackings");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizerID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("EventID");

                    b.HasIndex("OrganizerID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuestList", b =>
                {
                    b.Property<int>("GuestListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestListID"));

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.HasKey("GuestListID");

                    b.HasIndex("EventID")
                        .IsUnique();

                    b.ToTable("GuestLists");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuestListAttendee", b =>
                {
                    b.Property<int>("GuestListID")
                        .HasColumnType("int");

                    b.Property<int>("AttendeeID")
                        .HasColumnType("int");

                    b.HasKey("GuestListID", "AttendeeID");

                    b.HasIndex("AttendeeID");

                    b.ToTable("GuestListAttendees");
                });

            modelBuilder.Entity("DataAccessLayer.Models.BudgetTracking", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Event", "Event")
                        .WithOne("BudgetTracking")
                        .HasForeignKey("DataAccessLayer.Models.BudgetTracking", "EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Event", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Organizer", "Organizer")
                        .WithMany("Event")
                        .HasForeignKey("OrganizerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuestList", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Event", "Event")
                        .WithOne("GuestList")
                        .HasForeignKey("DataAccessLayer.Models.GuestList", "EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuestListAttendee", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Attendee", "Attendee")
                        .WithMany("GuestListAttendees")
                        .HasForeignKey("AttendeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Models.GuestList", "GuestList")
                        .WithMany("GuestListAttendees")
                        .HasForeignKey("GuestListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("GuestList");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Organizer", b =>
                {
                    b.Navigation("Event");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Attendee", b =>
                {
                    b.Navigation("GuestListAttendees");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Event", b =>
                {
                    b.Navigation("BudgetTracking")
                        .IsRequired();

                    b.Navigation("GuestList")
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Models.GuestList", b =>
                {
                    b.Navigation("GuestListAttendees");
                });
#pragma warning restore 612, 618
        }
    }
}
